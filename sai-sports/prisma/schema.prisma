generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  name      String?
  email     String  @unique
  password  String?
  image     String?
  authType  String  @default("credentials")
  isAdmin   Boolean @default(false)
  orders      Order[]
  products  Product[]
  accounts  Account[]
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String  @unique
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  refresh_token      String?

  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  description String
  products Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  image       String?
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  orders      Order[]
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Order {
  id         String   @id @default(uuid())
  userId     String
  productId  String
  quantity   Int
  totalPrice Float
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
